{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Desktop/M5 Epicode PT/M5-D4-Exercises /m5d4-exercise/src/BookList.js\";\n//import React from 'react';\nimport React, { Component } from 'react';\nimport { Row, Spinner } from 'react-bootstrap';\nimport books from \"./scifi.json\";\nimport BookListItem from \"./BookListItem\";\nimport MyNav from \"./MyNav\";\nimport MyFooter from \"./MyFooter\";\nimport { Fragment } from 'react';\n//import { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myInit = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  mode: 'cors',\n  cache: 'default'\n};\nlet myRequest = new Request(\"./scifi.json\", myInit);\nclass BookList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      books: []\n    };\n    this.componentDidMount = async () => {\n      const resp = await fetch(myRequest, myInit);\n      if (resp.ok) {\n        const books = await resp.json();\n        console.log(books);\n      }\n      this.setState({\n        books: books\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(BookListItem, {\n          item: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(MyFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default BookList;","map":{"version":3,"names":["React","Component","Row","Spinner","books","BookListItem","MyNav","MyFooter","Fragment","jsxDEV","_jsxDEV","myInit","method","headers","mode","cache","myRequest","Request","BookList","constructor","arguments","state","componentDidMount","resp","fetch","ok","json","console","log","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","item"],"sources":["/Users/jon/Desktop/M5 Epicode PT/M5-D4-Exercises /m5d4-exercise/src/BookList.js"],"sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\nimport { Row, Spinner } from 'react-bootstrap';\nimport books from \"./scifi.json\";\nimport BookListItem from \"./BookListItem\";\nimport MyNav from \"./MyNav\";\nimport MyFooter from \"./MyFooter\";\nimport { Fragment } from 'react';\n//import { useState, useEffect } from \"react\";\n\n\n\nlet myInit = {method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              mode: 'cors',\n              cache: 'default' }; \n\n\nlet myRequest = new Request(\"./scifi.json\", myInit);\n\n\n\n\n\n\nclass BookList extends Component {\n  state = {\n        books: []\n  }\n  componentDidMount = async () => {\n    const resp = await fetch(myRequest, myInit)\n    if(resp.ok){\n        const books = await resp.json();\n        console.log(books);\n    }\n        this.setState({\n            books: books\n          \n        })\n    \n    }\n    \n\n    render(){\n        return (\n    \n                \n                <Fragment>\n                <Row>\n                     <MyNav />\n                </Row>\n                \n                <Row>\n                    {books.map((book) => \n                        <BookListItem item={book} />)\n                        \n                        \n                        }\n                </Row>\n                <Row>\n                    <MyFooter />\n                </Row>\n             </Fragment>\n                   ) }\n                    \n       \n          \n        }\n\n\n        \n   \nexport default BookList;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,EAAEC,OAAO,QAAQ,iBAAiB;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,IAAIC,MAAM,GAAG;EAACC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AAAU,CAAC;AAGhC,IAAIC,SAAS,GAAG,IAAIC,OAAO,CAAC,cAAc,EAAEN,MAAM,CAAC;AAOnD,MAAMO,QAAQ,SAASjB,SAAS,CAAC;EAAAkB,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC/BC,KAAK,GAAG;MACFjB,KAAK,EAAE;IACb,CAAC;IAAA,KACDkB,iBAAiB,GAAG,YAAY;MAC9B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACR,SAAS,EAAEL,MAAM,CAAC;MAC3C,IAAGY,IAAI,CAACE,EAAE,EAAC;QACP,MAAMrB,KAAK,GAAG,MAAMmB,IAAI,CAACG,IAAI,EAAE;QAC/BC,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC;MACtB;MACI,IAAI,CAACyB,QAAQ,CAAC;QACVzB,KAAK,EAAEA;MAEX,CAAC,CAAC;IAEN,CAAC;EAAA;EAGD0B,MAAMA,CAAA,EAAE;IACJ,oBAGQpB,OAAA,CAACF,QAAQ;MAAAuB,QAAA,gBACTrB,OAAA,CAACR,GAAG;QAAA6B,QAAA,eACCrB,OAAA,CAACJ,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eAENzB,OAAA,CAACR,GAAG;QAAA6B,QAAA,EACC3B,KAAK,CAACgC,GAAG,CAAEC,IAAI,iBACZ3B,OAAA,CAACL,YAAY;UAACiC,IAAI,EAAED;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAI/B,eACNzB,OAAA,CAACR,GAAG;QAAA6B,QAAA,eACArB,OAAA,CAACH,QAAQ;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EACH;AAIb;AAKR,eAAejB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}