{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Desktop/M5 Epicode PT/M5-D2-Exercises/m5d2-exercise/src/BookList.jsx\";\n//import React from 'react';\nimport React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport books from \"./scifi.json\";\nimport BookListItem from \"./BookListItem\";\nimport MyNav from \"./MyNav\";\nimport MyFooter from \"./MyFooter\";\nimport { Fragment } from 'react';\n//import { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myInit = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  mode: 'cors',\n  cache: 'default'\n};\nlet myRequest = new Request(\"./scifi.json\", myInit);\nclass BookList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      books: []\n    };\n    this.componentDidMount = async () => {\n      const resp = await fetch(myRequest);\n      if (resp.ok) {\n        const books = await resp.json();\n      }\n      this.setState({\n        books: books\n      });\n      //useEffect(componentDidMount dependencies);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: this.state.books.map(book => /*#__PURE__*/_jsxDEV(BookListItem, {\n          item: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(MyFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n}\nconsole;\n//call after the rendering?\nexport default BookList;","map":{"version":3,"names":["React","Component","Row","books","BookListItem","MyNav","MyFooter","Fragment","jsxDEV","_jsxDEV","myInit","method","headers","mode","cache","myRequest","Request","BookList","constructor","arguments","state","componentDidMount","resp","fetch","ok","json","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","item","console"],"sources":["/Users/jon/Desktop/M5 Epicode PT/M5-D2-Exercises/m5d2-exercise/src/BookList.jsx"],"sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport books from \"./scifi.json\";\nimport BookListItem from \"./BookListItem\";\nimport MyNav from \"./MyNav\";\nimport MyFooter from \"./MyFooter\";\nimport { Fragment } from 'react';\n//import { useState, useEffect } from \"react\";\n\n\n\nlet myInit = {method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              mode: 'cors',\n              cache: 'default' }; \n\n\nlet myRequest = new Request(\"./scifi.json\", myInit);\n\n\n\n\n\nclass BookList extends Component {\n  state = {\n        books: []\n  }\n    \n\n    render(){\n        return (\n           \n                \n                <Fragment>\n                <Row>\n                    <MyNav />\n                </Row>\n                \n                <Row>\n                    {this.state.books.map(book => \n                        <BookListItem item={book} />)}\n                </Row>\n                <Row>\n                    <MyFooter />\n                </Row>\n             </Fragment>\n                   ) }\n                    \n        componentDidMount = async () => {\n            const resp = await fetch(myRequest)\n            if(resp.ok){\n                const books = await resp.json()\n            }\n                this.setState({\n                    books: books\n                })\n                //useEffect(componentDidMount dependencies);\n            }\n          \n        }\n        console\n        //call after the rendering?\nexport default BookList;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,IAAIC,MAAM,GAAG;EAACC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AAAU,CAAC;AAGhC,IAAIC,SAAS,GAAG,IAAIC,OAAO,CAAC,cAAc,EAAEN,MAAM,CAAC;AAMnD,MAAMO,QAAQ,SAAShB,SAAS,CAAC;EAAAiB,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC/BC,KAAK,GAAG;MACFjB,KAAK,EAAE;IACb,CAAC;IAAA,KAsBKkB,iBAAiB,GAAG,YAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACR,SAAS,CAAC;MACnC,IAAGO,IAAI,CAACE,EAAE,EAAC;QACP,MAAMrB,KAAK,GAAG,MAAMmB,IAAI,CAACG,IAAI,EAAE;MACnC;MACI,IAAI,CAACC,QAAQ,CAAC;QACVvB,KAAK,EAAEA;MACX,CAAC,CAAC;MACF;IACJ,CAAC;EAAA;EA5BTwB,MAAMA,CAAA,EAAE;IACJ,oBAGQlB,OAAA,CAACF,QAAQ;MAAAqB,QAAA,gBACTnB,OAAA,CAACP,GAAG;QAAA0B,QAAA,eACAnB,OAAA,CAACJ,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eAENvB,OAAA,CAACP,GAAG;QAAA0B,QAAA,EACC,IAAI,CAACR,KAAK,CAACjB,KAAK,CAAC8B,GAAG,CAACC,IAAI,iBACtBzB,OAAA,CAACL,YAAY;UAAC+B,IAAI,EAAED;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/B,eACNvB,OAAA,CAACP,GAAG;QAAA0B,QAAA,eACAnB,OAAA,CAACH,QAAQ;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EACH;AAab;AACAI,OAAO;AACP;AACR,eAAenB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}