{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Desktop/M5 Epicode PT/M5-D2-Exercises/m5d2-exercise/src/BookList.jsx\";\nimport React from 'react';\nimport { Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass BookList extends /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 24\n}, this) {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      books: []\n    };\n  }\n  render() {\n    return;\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"The Newest and the Greatest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: this.state.books.map(book => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.img,\n          style: {\n            width: \"200px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\ncomponentDidMount = async () => {\n  const resp = await fetch(\"./resources/scifi.json\");\n  if (resp.ok) {\n    const books = await resp.json().this.setState({\n      books: books\n    });\n  }\n};\nexport default BookList;","map":{"version":3,"names":["React","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","BookList","Component","fileName","_jsxFileName","lineNumber","columnNumber","constructor","arguments","state","books","render","children","map","book","src","img","style","width","componentDidMount","resp","fetch","ok","json","this","setState"],"sources":["/Users/jon/Desktop/M5 Epicode PT/M5-D2-Exercises/m5d2-exercise/src/BookList.jsx"],"sourcesContent":["import React from 'react';\n\nimport { Row } from 'react-bootstrap';\n\n\nclass BookList extends <Component></Component> {\n  state = {\n        books: []\n  }\n    \n\n    render(){\n        return \n           (\n                <>\n                <Row>\n                    <h1>The Newest and the Greatest</h1>\n                </Row>\n                <Row>\n                    {this.state.books.map(book => \n                    <img src={book.img} style={{width: \"200px\"}}/>)}\n                </Row>\n                </>\n            )\n        }\n}\n\ncomponentDidMount = async () => {\n    const resp = await fetch(\"./resources/scifi.json\")\n    if(resp.ok){\n        const books = await resp.json()\n\n        .this.setState({\n            books: books \n        })\n    }\n}\n\nexport default BookList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAMC,QAAQ,sBAASH,OAAA,CAACI,SAAS;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAa,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC7CC,KAAK,GAAG;MACFC,KAAK,EAAE;IACb,CAAC;EAAA;EAGCC,MAAMA,CAAA,EAAE;IACJ;IACG,aACKb,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACAd,OAAA,CAACF,GAAG;QAAAgB,QAAA,eACAd,OAAA;UAAAc,QAAA,EAAI;QAA2B;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClC,eACNR,OAAA,CAACF,GAAG;QAAAgB,QAAA,EACC,IAAI,CAACH,KAAK,CAACC,KAAK,CAACG,GAAG,CAACC,IAAI,iBAC1BhB,OAAA;UAAKiB,GAAG,EAAED,IAAI,CAACE,GAAI;UAACC,KAAK,EAAE;YAACC,KAAK,EAAE;UAAO;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C;IAAA,gBACH;EAEX;AACR;AAEAa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;EAClD,IAAGD,IAAI,CAACE,EAAE,EAAC;IACP,MAAMZ,KAAK,GAAG,MAAMU,IAAI,CAACG,IAAI,EAAE,CAE9BC,IAAI,CAACC,QAAQ,CAAC;MACXf,KAAK,EAAEA;IACX,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAeT,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}